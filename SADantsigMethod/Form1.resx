<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QC6RXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAAAZKGAAcAAAB6AAAAOAAAAABVTklDT0RFAABDAFIARQBBAFQATwBSADoAIABnAGQALQBq
        AHAAZQBnACAAdgAxAC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAs
        ACAAcQB1AGEAbABpAHQAeQAgAD0AIAA3ADAACv/+ADxDUkVBVE9SOiBnZC1qcGVnIHYxLjAgKHVzaW5n
        IElKRyBKUEVHIHY2MiksIHF1YWxpdHkgPSA3MAoA/9sAQwACAQECAQECAgICAgICAgMFAwMDAwMGBAQD
        BQcGBwcHBgcHCAkLCQgICggHBwoNCgoLDAwMDAcJDg8NDA4LDAwM/9sAQwECAgIDAwMGAwMGDAgHCAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgARgBGAwEi
        AAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAAB
        fQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNE
        RUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
        tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEA
        AAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRC
        kaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpz
        dHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        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
</value>
  </data>
</root>